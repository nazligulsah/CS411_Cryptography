from ElGamal import modinv
# -*- coding: utf-8 -*-
t2 = 5956813619278201140800924272068090554564909295979962450630656519740430477504942407392993409599925085203647233193851018647091657112428687538063606647173251762864208428373009582042639482695547913744731417387816335621025572344854442283807515125579921298217666328301529878649319957708915200631529408344007611288
m1 = b'I am gonna make him an offer he cannot refuse'
t1 = 43627224218115797228289249475921032907034220460492356111895503936082854418168250416497072941347471994743727973254642325585453584081740799906360299844041802654220328431411951616679346995559843264254628068501613292959454582118556805666347691733714922031589614165107379883775596944798653631705811795089241771123
p= 123673323891242867177514096819580236465497274063458984325241055844011153224145054858864521371774649105018822971116982650715941117881035552815726337827743610567394319322651354827890393410346287094867949471330649611353144350280202803994699252851189649371736656279618955988650904092455232405972031238033017555179

#since r1=r2=r 
m1 = int.from_bytes(m1, byteorder='big')
#print(m1)

#m2 = (t2*m1)/t1(mod p)
inverse_t1 = modinv(t1,p)
m2 = ((t2*m1)*inverse_t1) % p

print("m2: ", m2)

message= m2.to_bytes((m2.bit_length()+7)//8, byteorder='big')
message = message.decode("utf-8")
print(message)

"""m2:  969283021298493655178461982416132794013671029542699534826794616108165786147584985094094249886701190566804838203669396484740329991713
Well, it was more like a command, no was not an option!
gulsahonen@Gulsah-MacBook-Air cs411_hw1 % """